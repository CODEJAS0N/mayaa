Mayaa 0.9.20a リリースノート： 2005年**月**日

 このリリース ノートには、Mayaa0.1〜1.0に関するシステム動作環境、インストールの手順、
およびこれまでに判明している問題が記載されています。 これらの内容は、みなさまからの
フィードバックによって更新されますので、随時、最新情報を確認するようにしてください。
 Mayaa 0.1〜 1.0 に関するフィードバックを送信する方法については、下記を参照ください。



システム動作仕様環境：

    JavaVM： Java2 バージョン1.4.x以降
    コンテナ： Servlet API 2.3以降



システム動作確認環境：

 システムの動作は、以下の環境で確認されています。その他の環境については、適宜
フィードバックをお願いいたします。

    JavaVM： J2SDK 1.4.2_09 （5.0未確認）
    コンテナ： Tomcat4.1.31 / Tomcat5.0.28 / Jetty4.2.23



インストール手順：

 バイナリディストリビューションはWarファイルにて配布されています。WEBコンテナの
 WEB-APPフォルダに直接配置してからWEBコンテナを起動してください。
WEBコンテナの起動後、WEBブラウザより以下のURL（参考）にアクセスください。
サンプルアプリケーションおよびJavaDocを参照することができます。

    サンプルアプリケーション： http://localhost:8080/mayaa-*.*/index.html

 ソースディストリビューションは、EclipseプロジェクトをまるごとZIPアーカイブしてい
 ます。 お使いのEclipseワークスペースにインポートして利用ください。




MayaaのWEBサイト：

    http://mayaa.sandbox.seasar.org/


サポート & フィードバック方法：

  Mayaaのサポート & フィードバックは、Mayaa-User ML（日本語）によって行います。
 MLへの参加は下記URLページより購読登録してください。 MLへの投稿は、
 SPAM防止のためML購読者に限定しています。MLの購読は制限しておりませんので、
 どなたでも参加できます。

    ML購読登録： https://www.seasar.org/mailman/listinfo/mayaa-user 


-------------------------------------------------------------------
変更点 0.9.20a -> 0.9.21

-HTMLのid, XHTMLのidをバインディングに使わない設定を可能にしました。

-スクリプトのコメント内に閉じブレース (}) を書くと整合性エラーになっていた
 のを修正しました。

-------------------------------------------------------------------
変更点 0.9.20 -> 0.9.20a

-プロセッサプロパティの自動設定機能は意図しない動作を引き起こす場合があるため、
 動作しないようにしました。

-------------------------------------------------------------------
変更点 0.9.19 -> 0.9.20

-Mayaのプロダクト名をMayaaに変更しました。

-プロセッサの属性に書いたスクリプトの実行結果がundefinedの場合、期待型が
 Booleanの場合は今までどおりfalse、それ以外はnullを返すように変更しました。

-JSPのTagExtraInfoで指定するスクリプティング変数のスコープを正常に使えるよう
 修正しました。

-MayaaServletでrequestのCharacterEncodingをセットできるよう変更しました。
 ServiceProvider設定ファイルのengine/requestCharacterEncodingで指定します。
 mayaa-sampleで使用しています。

-TLDもしくはMLDに定義されているプロセッサプロパティについては、.mayaaに値の定義
 が無い場合、テンプレート上のノードを参照し、ノードの名前空間に属する該当する
 名前の属性値があれば、それを用いるように機能追加しました。

-------------------------------------------------------------------
変更点 0.9.18 -> 0.9.19

-テンプレートにスクリプトを書いた場合にエンティティ解決していなかった
 のを修正しました。

-レイアウトを使う場合にホストページmayaaファイルのm:noCacheが有効にならない
 のを修正しました。

-headerスコープが正常に使えないのを修正しました。


-------------------------------------------------------------------
変更点 0.9.17 -> 0.9.18

-XMLをテンプレートとしたときにXML宣言が出力されないのを修正しました。

-レイアウト機能において、doRenderをカスケードしたページ全部を辿って探すように
 修正しました。

-WriteProcessorのdefaultプロパティにスクリプトを使えるよう変更しました。

-スクリプトのXMLエンティティを２重に解決していたのを修正しました。

-WriteProcessorにescapeWhitespaceプロパティを追加しました。
 escapeWhitespaceをtrueにすると\r, \n, タブ文字をそれぞれ&#xd, &#xa, &#x9
 にエスケープします。

-AttributeProcessorのvalueにスクリプトを書いた場合、実行結果を自動的に
 XMLエスケープし、改行文字を空白に置き換えるよう修正しました。

-------------------------------------------------------------------
変更点 0.9.16 -> 0.9.17

-MLD中のproperty定義を、propertySet定義にまとめて再利用できるようにしました。

-API中の名前にて、〜Typeと用いてるもののうち、JavaのClass型を指すものをすべて
 〜Classと改名しました。

-mayaaファイル中のXMLコメント(<!-- -->)を処理しないようにしました。

-CommentProcessorでボディを処理するようにしました。HTML出力としてコメントを
 書き出したい場合、テンプレートに書くかm:commentを使うことで実現できます。

-ServiceCycle#loadにエンコーディング指定なしのものを追加しました。
 無指定の場合はUTF-8として読み込みます。

-サービスのファクトリ群に対し、JSFライクなマーシャル機能を実装しました。

-APIを変更しています。Underlyable -> ContextAware, Parameterizable ->
  ParameterAware としました。また、PositionAwareを新設し、
  ソース上の位置情報を全体的に取得できるようにしました。
  
-Underlyable -> ContextAwareにおいて、getUnderlyingObject()メソッドを
 getUnderlyingContext()と改めました。

-------------------------------------------------------------------
変更点 0.9.15 -> 0.9.16

-InsertProcessorにおいて、ページをハードリファレンスで保持していたのを、
 SoftReferenceをもちいて参照保持するように修正しました。

-プロセッサプロパティのプロパティ設定メカニズムに、カスタマイズ可能な型変換機能
 を追加しました。

-XMLのハンドルユーティリティにおいて、ソースSystemIDと行番号を常に取れるように
 しました。その利用で、MLDおよびTLDのパース結果において、SystemIDと行番号
 を例外メッセージおよびツール等で利用するために保持しています。

-m:rendered="true"によるエレメントの複製機能は、m:replace="false"によって発動
 するように変更しました。一方、m:rendered="false"と明示した場合、そのノード全体
 を削除するようになっています。m:replaceはデフォルトがfalse、m:renderedはデフォルト
 がtrueです。
  
-XHTMLのプレフィックスマッピングが適切に描画されない問題が、プロパティ設定
 メカニズムの変更に伴って再発していたものを修正しました。

-ページのスクリプトイベント（m:beforeRenderおよびm:afterRender）について、
 コンポーネントやレイアウト機能による複数ページが連携する際のイベント呼び出し順
 について、仕様を整理し、修正しました。
  
-------------------------------------------------------------------
変更点 0.9.14 -> 0.9.15

-空の属性があるタグをレンダリングした場合に"null"が入る問題が再発したのを
 修正しました。

-テンプレートとmayaaファイルをロックしないよう修正しました。

-テンプレートとmayaaファイルを削除した場合、キャッシュを使わないように
 変更しました。

-同梱するJaxenのバージョンを、1.1-beta-8にアップデートしました。

-------------------------------------------------------------------
変更点 0.9.13 -> 0.9.14

-JSF等のミドルウェアから利用するために、描画前のデコードフェーズを実行
  できる機能を追加しました。

-JSF等のミドルウェアから利用するために、スクリプトをELライクに実行する
  機能を追加しました。

-WEBコンテナがスレッドをプールすることに起因するバグを解決しました。
 このバグはとても重大なものなので、以前のバージョンをご利用の場合は、
 すみやかにアップデートください。

-------------------------------------------------------------------
変更点 0.9.12 -> 0.9.13

-テンプレートコンポーネントから自コンポーネントを呼び出すネスト構造のときに、
 きちんとm:doBaseを呼べるようにコールスタック処理を追加しました。

-ページやテンプレートのオブジェクトのキャッシュの効率を見直し、
 インスタンス生成の個数を減らすようにチューニングしました。

-テンプレートとしてXMLを使えるようにしました。

-m:echoプロセッサを追加しました。
 テンプレートに無い属性を追加することができます。
 テンプレートのタグにある属性の値を置き換えることができます。
 スクリプトから属性の名前を変数名として指定することで元の属性の値を利用できます。

-例外メッセージテンプレートでオリジナルノードとインジェクションノードを
 参照できるようにしました。

-「page」スコープのメソッド群がうまくJavaScript中から呼び出せないバグを修正しました。

-mayaaノードの、m:classおよび、m:scopeを廃止しました。代わりに、より汎用な
  AttributeScope#newAttribute(String, Class)メソッドを追加しました。

-SessionのコンテキストであるHttpSessionオブジェクトの生成を必要になるまで
  遅延するようにしました。

-同梱のRhinoのバージョンを最新の1.6-r2に置換えました。

-Cycleのフラッシュ関連の仕組みを整理微調整しました。

-XMLテンプレートで用いられるプレフィックスの解決において、.mayaa上のプレフィックス
 マッピングをテンプレート上でそのまま使っている箇所があったので修正しました。

-ライセンスを、SSL1.1から、ASL2.0に変更しました。

-ログ文字列の出力において、適切な文字列フォーマット処理を行えていなかった
 箇所を修正し、適切な出力が行われるようにしました。

-NekoHTML0.9.5の挙動にて、ごくまれにxmlns:*というプレフィックスマッピングの記述
 を、xmlns名前空間の単なる属性としてSAXハンドラにわたってくることがある場合の、
 回避を行いました。

-強制的にMayaaの出力をProxy/ブラウザキャッシュさせないようにしていたところを、
 設定可能にし、デフォルト状態ではキャッシュコントロールをしないようにしました。

-テンプレートコンポーネントも、デザイン継承機能を利用できるように修正しました。

-WARファイルによるディストロに、開発時参照用のソースコートアーカイブ（ZIPファイル）
 を作成・添付するようにしました。

-------------------------------------------------------------------
変更点 0.9.11 -> 0.9.12

-ProviderFactoryImplで、mayaa.providerファイルを読み込む際に、各コンポーネントの
  生成を決め打ちでおこなっていたところを修正しました。

-m:doRenderプロセッサで、m:rendered="true"としたときに、テンプレートエレメントが
 出力されない問題を修正しました。

-テンプレートエレメントが直接描画される場合に、m:rendered="false"を記述すると、
 そのエレメントおよび子のエレメントの出力が抑制されるS2JSF互換機能を追加しました。

-ページ描画時のイベントを、m:beforeRender属性およびm:afterRender属性のもの
 に加え、m:beforeRenderタグおよびm:afterRenderタグでも行う機能を追加しました。

-m:pageプロセッサおよびm:doRenderプロセッサに、m:name属性を追加し、名前明示
 にて同一テンプレート中の複数コンポーネントブロックを呼び分けることができるようにしました。

-コンポーネント上でもちいる描画機能として、m:doBodyから分離してm:doBaseを
 用意しました。

-MLDのproperty定義に、final属性を追加し、アプリケーションにて変更不可の値設定を
 行えるようにしました。

-.mayaaファイルだけでテンプレートの無いコンポーネントを作れるようにしました。

-Tiles類似のデザイン継承機能を追加しました。

-HTMLテンプレートのHTMLエレメントに直接m:classやm:beforeRenderなどの記述を
  許していましたが、上記デザイン継承機能と矛盾するようになったので、廃止しました。
  結果、ページモデルおよびページイベントの機能を利用する場合には、.mayaaファイル
  を必要とするようになりました。

-------------------------------------------------------------------
変更点 0.9.10 -> 0.9.11

-ECMA1.3のBoolean値の取り扱いにおいて、意図しない動作となる問題を回避しました。

-テンプレート上の属性に、空白文字を値とするものがあると動作しないバグを修正しました。

-テンプレート上のエレメントのIDがマッチするものが無いときに例外を出していたところを、
 警告のログ出力するにとどめるよう、変更しました。

-パース済みテンプレートがきちんとキャッシュされていないバグを修正しました。

-.mayaaファイルの直接実行を可能にしました。ブラウザから直接.mayaa拡張子のURL
  にアクセスすると、エンジンおよび該当ページの.mayaaのイベント発火を行いますが、
  テンプレート描画はしません。

-ServiceCycleに、スクリプトファイルをロードする、load(systemID, encoding)メソッドを
  追加しました。この機能によって、スクリプトソースをスクリプト実行にて読み込むことが
  できるようになりました。

-------------------------------------------------------------------
変更点 0.9.9 -> 0.9.10

-m:forプロセッサに、最大ループ回数を制限するmaxプロパティを新設しました。

-.mayaaファイル上のノードボディで直接スクリプトブロックを記述したとき、かつそのノードが
 m:attribute以外のノードを含まないときに、隠蔽されるべきテンプレート上の子ノードを
 出力してしまうバグを修正しました。

-Responseがnullを出力時にNullPointerExceptionを発生させてしまうバグを修正しました。

-m:elementプロセッサにおいて、動的に追加されたm:attributeオブジェクトを、自スレッド
  の他プロセッサで共有してしまうというバグを修正しました。

-ScriptResolverを廃止して、AttributeScopeによる拡張を行うように、スクリプト環境の
 スコープ概念と併せて変更しました。

-AttributeScope#getAttribute(String)において、スクリプト内部のオブジェクトをJavaの
  オブジェクトに変換せずに返していていたために問題が発生していたので、Javaオブジェ
  クトを基本として、冗長変換を行うように修正しました。

-web.xmlに、taglib-locationにて「/WEB-INF/」を含むパスの指定を行うと不正なソース
  指定方法としていたところ、正常な処理を行うように変更しました。

-m:startComponentプロセッサをm:doRenderに、m:endComponentプロセッサをm:doBody
  にそれぞれ統合しました。

-FolderSourceScannerのプロパティに再帰的に読むかどうかのフラグを追加しました。
  nameはrecursive、valueはtrueまたはfalseを指定します。

-FolderSourceScannerのプロパティに読むファイルを拡張子指定するものを追加しました。
  nameはextension、valueはピリオド(.)ありの拡張子を指定します。
  無指定の場合は対象となるファイルはありません。

-TLDの探し方を修正し、WEB-INF以下のすべてのTLDを読み込むようにしました。

-MLDの探し方をTLDに合わせて変更し、WEB-INF以下のすべてのMLDを読み込むようにしました。

-ElementProcessorをXHTMLに利用した場合において、xmlnsのマッピング定義出力を
  適切に行うように修正しました。

-.mayaa設定ファイルに、直接HTMLを書けるようにしました。

-------------------------------------------------------------------
変更点 0.9.8 -> 0.9.9

-ServiceProviderなどをStrutsなどの外部のフレームワークからも利用できるように、
 ThreadLocalを利用してServiceCycleを保持するようにしました。

-TemplateProcessor、ScriptResolverといったメソッド引数にServiceCycle
  を取るものを全て整理し、ServiceCycleを引数渡しせず、ServiceProviderから
  取得するようにしました。

-例外時やデバッグ作業時に、実行中のテンプレートもしくは設定XMLの該当箇所を
  を知る手がかりを得られるように、ServiceCycle#getOriginalNode() メソッドおよび、
  getInjectionNode()メソッドを追加し、エンジン中で情報更新を常に行うようにしました。

-JSP関連の機能およびコンポーネント関連の機能を、コアに移動しました。

-同梱するNekoHTMLのバージョンを0.9.5にアップデートしました。

-同梱するXercesのバージョンを2.7.1にアップデートしました。

-式言語の使用を廃止し、代えてスクリプト言語を利用するようにしました。実装では、
 JavaScriptのエンジンである、Rhinoを採用しています。

-外部のスクリプトソースファイルを読み込み実行する機能を追加しました。

-テンプレートや設定ファイル等のリソース読み込みメカニズムを全面刷新しました。
  mayaa.confファイルをJarのMETA-INFフォルダに配置しています。このことにより、
  Mayaaのアプリケーションを開発する際に、開発者が行わなければならない手順を
  簡便化できました。

-デフォルトのエラーページのテンプレートを、JarのMETA-INFフォルダ直下に配置しました。

-本体、サンプル、テストをそれぞれ別々のEclipseプロジェクトにしました。

-ページの解決方法を変更し、/WEB-INF相対と、デフォルトパッケージ相対は
 読まないようにしました。それぞれ、/WEB-INF/page相対、/META-INF相対を
 読むようになっています。

-ウェルカムファイルの対応ががデグレして機能していなかったものを修正しました。

-ブランクアプリケーションをWARファイルで配布するようにしました。

-ページスコープを、スタック構造とすることによって、テンプレート上でのスクリプト
  実行において、名前衝突が発生しないようにしました。

-BeanPropertiesProcessorおよび、StackTraceElementsProcessorを廃止しました。
  スタックトレースのダンプは、ForProcessorとスクリプトの併用で対応できました。

-例外処理を行うErrorHandler内でさらに例外が発生したときに、先のアプリケーション
 で生じた例外を隠蔽してしまう問題を回避しました。

-------------------------------------------------------------------
変更点 0.9.7.1 -> 0.9.8

-PageContextなどJSP-APIへの依存を局所化し、ServiceCycleオブジェクトに
  Servlet-APIも隠蔽しました。

-未来日付のファイルを処理するときに、無限ループにはいる問題を修正しました。

-スペックを満たさないJSPカスタムタグを利用できないようにJSPコンテナとタグの
 バージョンチェックする機能を復活させました。

-URLClassLoaderを前提としたJarライブラリの検索をやめ、ファイルシステムを利用した
  Jarファイルの検索を行うようにしました。

-サンプルのプレビュー再現性においてCSSがうまく効いてなかったのを修正しました。

-デフォルト名前空間を適切に処理しないバグを修正しました。

-XML宣言を出力しない問題を修正しました。

-JSP暗黙オブジェクトの対応を追加修正しました。

-JSPカスタムタグの属性に式を指定したとき、その式の例外をキャッチして食いつぶしていたところを、
  キャッチしないようにして、例外がそのまま伝播するように修正しました。

-------------------------------------------------------------------
変更点 0.9.7 -> 0.9.7.1

- ネットワークに接続していないPC上で動作させると、web.xmlのDTD解決のために
   sun.comへ接続しようとして失敗し、動作しないという問題の回避策を行いました。

-------------------------------------------------------------------
変更点 0.9.6 -> 0.9.7

- 「/*」などのパスパターンにMayaaサーブレットがマッピングされている際の、
  ウェルカムファイルアクセスに対するパス解決機能を追加しました。

-Cactusの使用をやめ、関連Jarをプロジェクトから取り除きました。

-.mayaaファイル中にネストしたタグインジェクションを記述した場合の挙動について
 細かなバグを修正しました。

-ComponentPageProcessorがテンプレートボディを2度出力してしまう場合がある
 バグについて修正しました。

-SVNリポジトリに移動しました。https://www.seasar.org/svn/sandbox/mayaa/trunk
 がリポジトリURLとなります。

-idによるインジェクションを行う際に、/mayaa/*[@m:id='message']のように、2層目のみの
 idを検索するXPathから、/mayaa//*[@m:id='message']とn層目のidも検索するようにしました。

-PropertyDefinitionのサービスメソッドを変更しました。プロパティ設定をPropertyDefinition
 に委譲するように設計されていたものを、PropertyDefinitionはあくまでファクトリとして動作し、
 ProcessorDefinition内で設定処理を行うようにしました。

-独自の例外の基底をMayaaExceptionとしました。このMayaaExceptionは、
 同一パッケージにあるmessage.propertiesより、完全修飾型名をキーに
 メッセージを取得する機能のみが実装されています。

-ページ描画途中に例外発生した際、コンテキストバッファをクリアしてなかったために、
 途中まで描画された後に例外ページの書き出しを行っていました。例外処理の中で
 コンテキストバッファをクリアすることにより、この問題に対応しました。

-依存するJaxenのバージョンを1.1-beta7に変更しました。

-名前空間URIを、http://www.seasar.org/mayaa から http://mayaa.seasar.org に変更しました。

-------------------------------------------------------------------
変更点 0.9.5 -> 0.9.6

-XPathインジェクション機能が追加されました。
    <html>
      <body>
        <div class="box">テンプレート上のダミー文字列</div>
      </body>
    </html>
  上記のような特別にMayaa用途としていないHTMLに対して、
    <?xml version="1.0"?>
    <m:mayaa xmlns:m="http://www.seasar.org/mayaa"
            xmlns:c="http://java.sun.com/jstl/core_rt">
      <c:out c:value="こんにちは" m:rendered="true"
            m:xpath="//div[@class='box']"/>
    </m:mayaa>
  このように、m:xpath属性によりインジェクション内容を指定することができます。

-OGNLライブラリのバージョンを、OGNL3.0-pre2よりOGNL2.6.7に変更しました。
  これは、他のOGNL利用フレームワーク（Seasar2やWebWork2など）と併用する際の
  便利を考えての変更です。

-標準のMayaaServletはimplパッケージに移動しました

-commons-poolライブラリに依存しないようになりました。

- .mayaaファイルにおいて、ノードの閉じタグやネスト構造の書き方によって挙動が変わっ
  ていた問題を解決しました。

-URLに対応して、HTMLテンプレートファイルを探す方法は以下の通りにしました。
  /foo/baa/index.htmlをリクエストされたとき、以下の順に探します。
    -- [コンテキストルート]/WEB-INF/foo/baa/index.html
    -- [コンテキストルート]/foo/baa/index.html
    -- foo.baaパッケージのリソース、index.html
    -- クラスパス中のJarの、/META-INF/foo/baa/index.html
  この機構は全部org.seasar.mayaa.impl.source.*に実装されています。また、Jarのエントリ
  検索結果はキャッシュするようにしました。

- MLD仕様を導入しました。テンプレートプロセッサのインジェクションにおいて、設定ノード
  からの変換方法を記述した、設定XMLを用います。JSPのTLDに類似します。この仕様
  変更に伴い、テンプレートプロセッサリゾルバが廃止されました。

- ServiceProviderの変更。/WEB-INF/mayaa.conf ファイルによって、ServiceProviderが
  初期化されるように仕様変更しました。結果、インジェクションリゾルバや式リゾルバなどの
  ユーザーによるカスタマイズの登録が、これまでのコードによるものではなく、mayaa.confの
  XML記述となりました。

- ダイナミックなタグ出力のため、テンプレートやMayaaファイルに直接、Elementプロセッサを
  記述できるようにしました（m:element をインジェクトする）。また、属性はAttributeプロセ
  ッサ（m:attribute）によって動的な追加が行えます。

- JSPカスタムタグライブラリも、MLD仕様下にてコントロールされるようになりました。

- テンプレート上のノードから、インジェクションした結果ノードに、名前空間のマッピング情報
  （NodeNamespace）をコピーするインジェクションレゾルバ（NamespacesSetter）をレゾルバ
  チェーンのはじめに入れました。結果、リゾルバAPIがシンプルになっています。

- その他、APIおよび実装について、多くの変更が生じました。

-------------------------------------------------------------------
変更点 0.9.4 -> 0.9.5

・ パース時の名前空間の取り扱いの仕様に変更を行いました。骨子は以下のとおりです。
  -属性の名前空間が省略されたときには、ノードの名前空間で補完するようにしました。
  -TagProcessorResolverでは、インジェクトされるTLDを指定した名前空間URIによって
    定義されている属性をタグに設定するようにしました。
  -{MAYA_URI}mayaaIDは、{MAYA_URI}idと改名。
  -{MAYA_URI}mayaaPathは、{MAYA_URI}xpathと改名。
  -{MAYA_URI}replaceは、{MAYA_URI}renderedと改名し値の意味をtrue-false逆転

・ XPathによってノードを検索する機能を追加しました。

既知の問題 0.9.5：

・ XPathによって設定XMLのノードの検索はOKですが、テンプレートのノードを検索する際に
  名前空間の問題から、直感的にXPath式文字列記述したものがヒットしません。

-------------------------------------------------------------------
変更点 0.9.3 -> 0.9.4

・ Removeマジックカスタムタグを廃止しました。Ifタグを利用ください。

・ 設定XMLにノード記述する際に、ネスト構造を許すようにしました。たとえば以下の例です。
  <?xml version="1.0" encoding="Shift_JIS"?>
  <mayaa xmlns:c="http://www.seasar.org/mayaa/jstl/core">
     <c:out mayaaID="message" value="${ helloModel.greeting }">
       <doBody/>
       <c:out value="ごきげんいかが？"/>
     </c:out>
  </mayaa>
  mayaaIDを持つノードの下に、doBodyとc:outノードがネストしています。

・ 名前空間プレフィックス「m」をxmlns:m="***"と上書きしない限り、
  「http://www.seasar.org/mayaa」と記述が省略されても自動的に解決するようにしました。

・ ImplicitPage関連のプロセッサおよびレゾルバ群をstandardよりimplに移動しました。

・ OutProcessorにおいて、doStartProcess()でBodyTag.EVAL_BODY_BUFFEREDを
  返すべきところを、Tag.EVAL_BODY_INCLUDEを返していたというバグを修正しました。

・ MayaaContextを廃止して、PageContextに一本化しました。

・ JSPカスタムタグのプーリング方法を変更し、release()を仕様どおりに実装していない
  カスタムタグも動作するように対応しました。

・ OGNLエンジンをプーリングしていたために発生していたスレッドセーフ性への障害を対応
  しました。

・ テンプレートのモデルをツリーウォークできるように、オリジナルの構造を保持するように
  テンプレートビルダーの仕組みを実装しなおしました。ProcessorResolverで、この
  オリジナル構造を参照しつつ、プロセッサの解決を行うようにしています。

・ InjectionResolverが新規追加されました。このレゾルバは、テンプレートの構造をツリー
  ウォークし、設定XMLへの照会とinject属性の処理などを行いつつ、プロセッサ解決前
  のプリプロセスを行う仕組みです。

・ 各レゾルバに、Servletフィルタに似たチェーン制御機能を追加しました。この機能追加に
  より、モノリシックに実装されていたビルダの諸機能をレゾルバにアダプター化して出すことが
  できました。

・ engineSettingをデフォルト設定XMLに書くのを改め、すべてサーブレットのInitパラメータ
  に記述するように変更しました。

-------------------------------------------------------------------
変更点 0.9.2 -> 0.9.3

・ テンプレートおよび各設定ファイルに設定したモデルオブジェクトを式で参照する際に、
  直接プロパティもしくはメソッド名を記述-解決するようになりました。

・ ApplicationContextをServiceProvider、TemplateContextをMayaaContextに
  名前変更しました。

・ CompositeExpressionResolver、CompositeProcessorResolver、
  CompositeErrorHandlerへレゾルバやハンドラを追加した際、いままでLIFOであった
  ものを、FIFOに変更しました。

・ StandardServiceProviderFactoryを追加しました。

・ ライフタイムイベントで、初発のbeforeRenderが発生しない問題を修正しました。

・ 設定XMLに書かれたノードがidで引いてきたとき、ProcessorResolverでオリジナル
  のQNameが取れないという問題を修正しました。

・ 例外をページ表示するために、StackTraceElementsProcessorと
  BeanPropertiesProcessorを追加しました。

・ テンプレート上のmayaaIDもしくはidの値によるノード参照が解決できないとき、例外
  を投げるように変更しました。

・ テンプレートビルド時の例外で、行番号とカラム番号を取得できるようにしました。

・ 設定XMLおよびテンプレートの属性値にエンティティが記述され、そのまま出力される
  場合において、文字化けしていた問題を修正しました。

-------------------------------------------------------------------
変更点 0.9.1 -> 0.9.2

・ JSP互換モードを廃止しました。

・ パースが途中で失敗した際に、再度アクセスすると中途半端な画面出力をして
  しまうバグを修正しました。

・ テンプレートおよび各設定ファイルにそれぞれモデルオブジェクトを設定する機能を
  追加しました。

・ テンプレートおよびページ、エンジンの各層ごとに描画前および後に指定された
  式言語を実行する機能を設けました。

・ モデルオブジェクトの機能および描画イベントの機能の追加に伴い、useBean
  およびactionマジックカスタムタグは廃止しました。

既知の問題 0.9.2：

・ 設定XMLおよびテンプレートの「属性値」にエンティティが記述された際に、そのまま
  出力される場合に文字化けの原因となることがあります。

-------------------------------------------------------------------
変更点 0.9.0 -> 0.9.1

・ 名前空間の考え方を改め、名前空間の指定の無いノードは適宜補って動作
  するようにアーキテクチャの変更を行いました。

・ 名前空間の仕様変更に伴い、NodeResolverが廃止しました。

・ 名前空間の仕様変更に伴い、tagマジックカスタムタグおよびtaglibマジックカスタム
  タグ、bindingマジックカスタムタグを廃止しました。tagに変わって、名前空間指定
  「xmlns」にTLDのURIを指定する方式になっています。

・ ノードIDの指定を、設定XML上では「mayaaID」、HTMLテンプレート上では、
  「m:mayaaID」もしくは「id」とするようにしました。この変更に伴い、テンプレート上
  でidを式で自動生成したり、記述が出力されないように抑制することができる
  ようになります。

・ JSP互換モードを用意しました。既存のJSPを出来る限りすこしの手直しで
  Mayaa上で動作させる実験的な試みです（1.0ファイナルでは削除されるかも
  しれません）。

・ ExpressionContextを廃止して、TemplateContextと統合しました。

・ templateRoot設定を行ってもきちんと反映されないバグを修正しました。

・ テンプレート接尾辞のデフォルトを「_」から「$」に変更しました。

・ PageContextを内部生成するときに、booleanのエンジン設定値がきちんとわ
  たらないバグを修正しました。

・ 式の中でエンティティ解決がされていないというバグを修正しました。

・ エンジン設定を行っていた「engine」ノードは、「engineSetting」へと名前を変更
  しました。

・ attributeマジックカスタムタグによるImplicitPage（テンプレートカスタムタグ）へ
  パラメータを渡す機能の初期実装を完了しました。

・ TLDの登録について、web.xmlに定義する方法、Jarを直接指定する方法を
  実装しました。

・ TLDのパースにおいて、JSP1.2および2.0への対応を行いました。

・ TemplateErrorHandlerにおいて、該当例外名のテンプレートが見つからない場合、
  上位例外でテンプレートを探すようになりました。

-------------------------------------------------------------------
変更点 0.4.0 -> 0.9.0

・ テンプレートのタグもしくは設定XMLのエレメントに、m:replace="false"
  と指定を行うと、インジェクトホストのタグを出力します。

・ attributeマジックカスタムタグによるImplicitPage（テンプレートカスタムタグ）へ
  パラメータを渡す機能を実装しました。同時に、ImplicitPageを直接閲覧し
  た場合、リクエストパラメータを同じ式から解決するよう切り替える機能を実装
  しました。

・ テンプレートに記述した、Entityの解決と、DTDの出力、コメントの出力を
  実装しました。

・ テンプレートのテキストボディに改行を含む複数行にて式ブロックを記述された
  場合にも適切に動作するように修正しました。

・ TemplateResolverのAPIが簡素化されました。

・ TLD周りの実装を進め、JSP1.1相当機能については完了しました。

既知の問題 0.9.0：

・ attributeマジックカスタムタグ周辺の実装が未完成です。

・ JSP1.2および2.0への対応がまだ完了していません。

-------------------------------------------------------------------
変更点 0.3.0 -> 0.4.0

・ 式言語エンジンを刷新しました。新しいAPIは、org.seasar.mayaa.el.* です。
  デフォルトの実装としてOGNL3.0によるものを提供しています。また、式エンジンAPI
  を見直すことにより、将来の式エンジンの置き換えカスタマイズにも配慮してあります。

・上記の変更により、commons-elが削除されました。また、APIに含まれていた、
  JSR245相当のUnifiedELの実装を、一旦削除しました。

・ テンプレートによる例外ページ機能の実装が追加されました。TemplateErrorHandler
  です。このハンドラは、/context/WEB-INF/error/フォルダから発生した例外の名前が
  ついたテンプレートを探し、描画するものです。

・ Mayaaエンジンのエントリポイントとして、0.3.0で提供されたFilterを削除しました。
  フォワード時の挙動など、不具合が発生したためです。

・ 他のJSPや、Mayaaページ、サーブレット、コントローラーフレームワーク（Strutsなど）
  からフォワードされたときの描画について不具合が出ていた箇所を修正しました。

既知の問題 0.4.0：

・ attributeマジックカスタムタグによるImplicitPage（テンプレートカスタムタグ）への
  パラメータを渡す機能が未実装です。

・ TLD周りの実装をさらに進めているところです。

-------------------------------------------------------------------
変更点 0.2.0 -> 0.3.0

・ APIの例外取り扱いを検討し、復旧不能な例外についてはRuntimeExceptionを
  継承した例外にて取り扱うようにしました。

・ 例外処理機構がAPIに追加されました。

・ TagProcessorにおいて、TryCatchFinallyを実装したJSPカスタムタグに対応しました。

・ Mayaaエンジンのエントリポイントとして、従来のServletに加え、Filterとして動作する
  ものも用意しました。

・ テンプレート接尾辞のセパレータをアプリケーション設定項目としました。

・ .mayaaファイルを更新した際に、自動でテンプレートを再構築する機能が動作するよう
  になりました。

既知の問題 0.3.0：

・ attributeマジックカスタムタグによるImplicitPage（テンプレートカスタムタグ）への
  パラメータを渡す機能が未実装です。

-------------------------------------------------------------------
変更点 0.1.3 -> 0.2.0

・ 依存するcommons-beanutilsを1.7.0にバージョンアップして、commons-collections
  を削除しました。

・ ImplicitPage（テンプレートカスタムタグと呼んでいたもの）機能を実装しました。一部
  未実装部がありますが、簡単なサンプルは動作しています。

既知の問題 0.2.0：

・ attributeマジックカスタムタグによるImplicitPage（テンプレートカスタムタグ）への
  パラメータを渡す機能が未実装です。

・ .mayaaファイルを更新した際に、自動でテンプレートを再構築する機能が未完成です。

-------------------------------------------------------------------
変更点 0.1.2 -> 0.1.3

・ TLDパースにcommons-digesterを利用していたものを再構築し、digesterを外し
  ました。依存するJarライブラリを減らしました。同時に、JSP2.0以降のTLDで例外
  がスタックトレースされていた問題を修正しました。

・ ProcessorResolverのAPIが変更されました。これにより、リゾルバの作成が便利に
  なりました。しかし、まだUnstableなので、ご注意ください。将来バージョンでの変更
  の可能性があります。

既知の問題 0.1.3：

・ テンプレートカスタムタグの機能が未実装です。

・ .mayaaファイルを更新した際に、自動でテンプレートを再構築する機能が未完成です。

-------------------------------------------------------------------
変更点 0.1.1 -> 0.1.2

・ テンプレートや設定XMLをアプリケーション動作中に変更したときに、ダイナミックに再
  構築を行ってサービスを継続するようになりました。

・ 「xxx_ja.html」のようにsuffix固定のリクエストが行われた際の処理をきちんと行うよ
   うに修正しました。

・ ページ出力のエンコードをテンプレート中の指定で解決するように修正しました。

既知の問題 0.1.2：

・ テンプレートカスタムタグの機能が未実装です。

・ TLD読み込み時に、JSP2.0以降のTLDで例外が発生し、標準出力に例外のスタッ
  クトレースが出力されます。

-------------------------------------------------------------------
変更点 0.1.0 -> 0.1.1

・ APIの範囲を見直し、Mayaaのコア機能と、Standard機能を分離しました。Mayaaのコア
   機能は、src-apiフォルダおよびsrc-implフォルダに配置されるソースによって実装され、
   Standard機能は、src-standardフォルダに配置されています。

・ ネットワークに接続していないPC上で動作させると、TLDのDTD解決のためにsun.com
   に接続にいって失敗し、動作しないという問題の回避策を行いました。

・ テンプレートのエンコード解決の仕様を変更し、設定XML中のtemplateエレメントを
   廃止しました。特にテンプレートのファイルエンコーディングを指定しなくても、テンプレ
   ート中のMETAタグを見て、適切なエンコーディングで読み出します。これはNekoHTML
   パーサーの機能です。

既知の問題 0.1.1：

・ 現在のところ、ページ出力は「Shift_JIS」固定です。これはソース中で特にリテラルで
   固定的に指定してる暫定実装があるためです。

・ 未実装機能が多くあります。

-------------------------------------------------------------------
既知の問題 0.1.0：

・ ファーストバージョンのため、未実装機能が多くあります。
